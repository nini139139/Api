// <auto-generated />
using System;
using Api.Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Domain.Migrations
{
    [DbContext(typeof(DataContxt))]
    [Migration("20201012174213_CreateNew")]
    partial class CreateNew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("Api.Domain.Entity.Company.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Api.Domain.Entity.Market.Market", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Markets");
                });

            modelBuilder.Entity("Api.Domain.Entity.Market.MarketCompany", b =>
                {
                    b.Property<int>("Company")
                        .HasColumnType("int");

                    b.Property<int>("Market")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Company", "Market");

                    b.HasIndex("Market");

                    b.ToTable("MarketCompanies");
                });

            modelBuilder.Entity("Api.Domain.Entity.UserModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Api.Domain.Entity.Market.MarketCompany", b =>
                {
                    b.HasOne("Api.Domain.Entity.Company.Company", "Companies")
                        .WithMany("MarketCompanies")
                        .HasForeignKey("Company")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Domain.Entity.Market.Market", "Markets")
                        .WithMany("MarketCompanies")
                        .HasForeignKey("Market")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Companies");

                    b.Navigation("Markets");
                });

            modelBuilder.Entity("Api.Domain.Entity.Company.Company", b =>
                {
                    b.Navigation("MarketCompanies");
                });

            modelBuilder.Entity("Api.Domain.Entity.Market.Market", b =>
                {
                    b.Navigation("MarketCompanies");
                });
#pragma warning restore 612, 618
        }
    }
}
